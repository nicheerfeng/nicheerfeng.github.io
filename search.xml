<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>git+hexo+gitbook入门指南</title>
    <url>/2021/09/17/git+hexo+gitbook%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>为了硬凑字数写的小短文：</p>
<p>本文内容包含：</p>
<p>1、记录安装过程中的报错；</p>
<p>2、记录git的使用命令；</p>
<p>3、记录hexo的安装及next主题的优化；</p>
<p>4、记录gitbook的安装及优化；</p>
<p>5、记录markdown的安装及优化；</p>
<span id="more"></span>



<h3 id="解决代码报错"><a href="#解决代码报错" class="headerlink" title="解决代码报错"></a>解决代码报错</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## </span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/wdg1111/wdgreact.git</span><br><span class="line">Cloning into <span class="string">&#x27;wdgreact&#x27;</span>...</span><br><span class="line">fatal: Unsupported SSL backend <span class="string">&#x27;“openssl”&#x27;</span>. Supported SSL backends:</span><br><span class="line">        openssl</span><br><span class="line">        schannel</span><br><span class="line">出现上面的报错：</span><br><span class="line"></span><br><span class="line">解决方法</span><br><span class="line">git config --global --<span class="built_in">unset</span> http.sslBackend</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 解决报错：</span></span><br><span class="line">git.exe pull --progress --no-rebase -v <span class="string">&quot;origin&quot;</span>fatal: unable to access <span class="string">&#x27;https://github.com/konsumer/arduinoscope.git/&#x27;</span>: error setting certificate verify locations:</span><br><span class="line">CAfile: D:\Program Files\Git\mingw64/bin/curl-ca-bundle.crt</span><br><span class="line">CApath: none</span><br><span class="line">————————————————</span><br><span class="line"></span><br><span class="line">git config --system http.sslcainfo <span class="string">&quot;D:\bclang\R-4.0.5\library\openssl\curl-ca-bundle.crt&quot;</span></span><br><span class="line"></span><br><span class="line">（注意修改为正确的文件路径）或</span><br><span class="line">git config --system http.sslverify <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂时先以这种方法解决问题；</span></span><br><span class="line">我使用git config --system http.sslverify <span class="literal">false</span>  命令解决问题。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 报错解决：</span></span><br><span class="line">Git报错解决：OpenSSL SSL_read: Connection was reset, errno 10054 错误解决</span><br><span class="line"><span class="comment"># 打开Git命令页面，执行git命令脚本：修改设置，解除ssl验证</span></span><br><span class="line">git config --global http.sslVerify <span class="string">&quot;false&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## hexo - d 无法推送：</span></span><br><span class="line">deploy:  <span class="comment">## 注意下面代码的相对位置；错位后不能推送；</span></span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/nicheerfeng/nicheerfeng.gitihub.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  </span><br><span class="line"><span class="comment">## 报错记录：解决git push时出现Failed to connect to github.com port 443: Timed out</span></span><br><span class="line"><span class="comment"># 这里可能的原因是本地的代理或者host出现问题；</span></span><br><span class="line"><span class="comment"># 检测方法：第一是取消代理，仅使用本地host；或者更改代理：</span></span><br><span class="line"><span class="comment"># 解决办法参见：</span></span><br><span class="line">https://www.it610.com/article/1288132904815210496.htm</span><br><span class="line"><span class="comment"># 查询是否使用代理</span></span><br><span class="line">git config --global http.proxy</span><br><span class="line">git config --global https.proxy</span><br><span class="line">或者</span><br><span class="line">env|grep -I proxy</span><br><span class="line"><span class="comment">## 取消代理设置</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 报错记录：</span></span><br><span class="line"><span class="comment"># 解决：</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">ERROR Deployer not found: git</span><br><span class="line"><span class="comment"># 方法：</span></span><br><span class="line">$ hexo d</span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="hexo安装工作步骤"><a href="#hexo安装工作步骤" class="headerlink" title="hexo安装工作步骤"></a>hexo安装工作步骤</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v	<span class="comment">#查看node版本</span></span><br><span class="line">npm -v	<span class="comment">#查看npm版本</span></span><br><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org	<span class="comment">#安装淘宝的cnpm 管理器</span></span><br><span class="line">cnpm -v	<span class="comment">#查看cnpm版本</span></span><br><span class="line">cnpm install -g hexo-cli    <span class="comment">#安装hexo框架</span></span><br><span class="line">hexo -v	<span class="comment">#查看hexo版本</span></span><br><span class="line">mkdir blog	<span class="comment">#创建blog目录</span></span><br><span class="line"><span class="built_in">cd</span> blog	 <span class="comment">#进入blog目录</span></span><br><span class="line">sudo hexo init 	<span class="comment">#生成博客 初始化博客</span></span><br><span class="line">hexo s	<span class="comment">#启动本地博客服务</span></span><br><span class="line">http://localhost:4000/	<span class="comment">#本地访问地址</span></span><br><span class="line">hexo n 我的第一篇文章 <span class="comment">#创建新的文章 </span></span><br><span class="line"><span class="comment">#返回blog目录</span></span><br><span class="line">hexo clean <span class="comment">#清理</span></span><br><span class="line">hexo g <span class="comment">#生成</span></span><br><span class="line"><span class="comment">#Github创建一个新的仓库 YourGithubName.github.io</span></span><br><span class="line">cnpm install --save hexo-deployer-git <span class="comment">#在blog目录下安装git部署插件</span></span><br><span class="line">----</span><br><span class="line"><span class="comment">#配置_config.yml </span></span><br><span class="line">-----</span><br><span class="line">	<span class="comment"># Deployment</span></span><br><span class="line">	<span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">	deploy:</span><br><span class="line">  		<span class="built_in">type</span>: git</span><br><span class="line"> 		repo: https://github.com/YourGithubName/YourGithubName.github.io.git</span><br><span class="line">  		branch: master</span><br><span class="line">-----。</span><br><span class="line">hexo d	<span class="comment">#部署到Github仓库里</span></span><br><span class="line">https://YourGithubName.github.io/  <span class="comment">#访问这个地址可以查看博客</span></span><br><span class="line"></span><br><span class="line"> git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia  <span class="comment">#下载yilia主题到本地</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改hexo根目录下的 _config.yml 文件 ： theme: yilia</span></span><br><span class="line"></span><br><span class="line">hexo c	<span class="comment">#清理一下</span></span><br><span class="line">hexo g	<span class="comment">#生成</span></span><br><span class="line">hexo d	<span class="comment">#部署到远程Github仓库</span></span><br><span class="line"></span><br><span class="line">hexo server -g 本地4000端口预览；</span><br><span class="line"></span><br><span class="line"><span class="comment">## 远程更新到github之前，本地win；</span></span><br><span class="line"><span class="comment"># 需要先配置ssh文件；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 获取github的ssh网页地址：</span></span><br><span class="line">在建立的仓库中选择code，然后点击ssh即可；</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="hexo优化"><a href="#hexo优化" class="headerlink" title="hexo优化"></a>hexo优化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">###################### 主题优化 #####################</span></span><br><span class="line"><span class="comment"># 安装及下载主题：</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line"><span class="comment">## 主题基本内容优化</span></span><br><span class="line"></span><br><span class="line">参见：</span><br><span class="line">方法1：https://www.jianshu.com/p/3af2687c01b4</span><br><span class="line"></span><br><span class="line">方法2：https://blog.csdn.net/prefectjava/article/details/111192741</span><br><span class="line"></span><br><span class="line"><span class="comment">## 双语修改：</span></span><br><span class="line">language_switcher: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片保存：</span></span><br><span class="line">mn4.jpg 全文背景；</span><br><span class="line"></span><br><span class="line"><span class="comment">## 主题优化报错：</span></span><br><span class="line">在将主题优化后，到github上面之后，数据显示不全，或乱码：</span><br><span class="line"><span class="comment"># 解决方法：</span></span><br><span class="line">修改根目录下的_config.yml，然后将url改为你的gihub网站；</span><br><span class="line"></span><br><span class="line"><span class="comment">##################### 配置图床 ########################</span></span><br><span class="line"><span class="comment">## 使用picgo：</span></span><br><span class="line"><span class="comment">## 注意token的最长有效期为90天，也即3个月；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 相关参数：</span></span><br><span class="line">仓库名：buyishusheng/datapicture</span><br><span class="line">分支名：master</span><br><span class="line">token：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</span><br><span class="line">指定储存路径：img/</span><br><span class="line">设计自定义域名：https://github.com/buyishusheng/datapicture/master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 注意添加图传的 markdown形式后，需要在其后面添加：</span></span><br><span class="line">?raw=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### ###################  hexo提交markdown ##############</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 相关配置：</span></span><br><span class="line">title: Hello World</span><br><span class="line">date: 2019-06-28 22:36:00</span><br><span class="line">categories: hexo</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">  - others</span><br><span class="line">  </span><br><span class="line"><span class="comment">## </span></span><br></pre></td></tr></table></figure>



<h3 id="git-使用及进阶"><a href="#git-使用及进阶" class="headerlink" title="git 使用及进阶"></a>git 使用及进阶</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## git使用：</span></span><br><span class="line"><span class="comment">## 使用git：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看个人配置和全局配置：</span></span><br><span class="line">git config --list : 按q退出；</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果要求修改某个参数，直接百度即可；</span></span><br><span class="line"><span class="comment"># 例如master 改为 main </span></span><br><span class="line"> git config --global init.defaultBranch main</span><br><span class="line"><span class="comment">## 查看个人配置参数：</span></span><br><span class="line">C:\Users\admin\.gitconfig </span><br><span class="line"></span><br><span class="line"><span class="comment">## git的分支思想：</span></span><br><span class="line">分支在实际中有什么用呢？假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了50%的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。</span><br><span class="line"></span><br><span class="line">现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</span><br><span class="line"></span><br><span class="line">其他版本控制系统如SVN等都有分支管理，但是用过之后你会发现，这些版本控制系统创建和切换分支比蜗牛还慢，简直让人无法忍受，结果分支功能成了摆设，大家都不去用。</span><br><span class="line"></span><br><span class="line">但Git的分支是与众不同的，无论创建、切换和删除分支，Git在1秒钟之内就能完成！无论你的版本库是1个文件还是1万个文件。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 相关流程记录：</span></span><br><span class="line">1 、在github创建远程仓库；</span><br><span class="line">2、使用git <span class="built_in">clone</span> 远程仓库；ssh格式的；</span><br><span class="line"></span><br><span class="line">3、 根据远程仓库中的文件，修改自己的代码或者增添新的文件；</span><br><span class="line">4、 使用git add <span class="string">&quot;添加指定文件&quot;</span> 或者add .增加所有文件(注意空格)；</span><br><span class="line">5、 使用git commit -m <span class="string">&quot;用于记录测试&quot;</span>，添加本次将信息拷贝到缓存的分支记录信息；</span><br><span class="line">5.1 理论上这里每次应该可以回滚，查看所有提交的历史记录；</span><br><span class="line"></span><br><span class="line">6、上传文件到github对应的仓库；</span><br><span class="line">git push -u origin main  <span class="comment">## 注意origin main为固定格式，不可改变；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## git进阶：</span></span><br><span class="line">1、查看修改文件的历史记录：</span><br><span class="line">git <span class="built_in">log</span> --follow -p ddd.txt <span class="comment">##仅包含修改部分；</span></span><br><span class="line"></span><br><span class="line">2、查看历史回滚记录：</span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">3、创建分支；</span><br><span class="line"><span class="comment"># 目的是有一个总分支，然后在子分支上工作；将子分支合并到总分支中；</span></span><br><span class="line">$ git checkout -b iss53</span><br><span class="line">Switched to a new branch <span class="string">&quot;iss53&quot;</span></span><br><span class="line">该命令为下面两条命令的简写：</span><br><span class="line">$ git branch iss53</span><br><span class="line">$ git checkout iss53</span><br><span class="line">3.1 删除分支：</span><br><span class="line">git branch -D hotfix</span><br><span class="line">3.2 删除远程分支：</span><br><span class="line">git push origin --delete new_a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4、 切换分支：</span><br><span class="line"> git checkout iss53 <span class="comment">## 子分支；</span></span><br><span class="line">  git checkout main <span class="comment">## 总分支；</span></span><br><span class="line"></span><br><span class="line">5、分支合并：</span><br><span class="line">5.1 子分支合并到主分支？</span><br><span class="line">git merge hotfix <span class="comment"># 其中hotfix是子分支，默认即合并；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 如果子分支与总分支出现合并冲突，则需要手动解决；</span></span><br><span class="line"></span><br><span class="line">6、查看所有分支;</span><br><span class="line">git branch -a</span><br></pre></td></tr></table></figure>

<h3 id="如何使用gitbook来写书；"><a href="#如何使用gitbook来写书；" class="headerlink" title="如何使用gitbook来写书；"></a>如何使用gitbook来写书；</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 如何使用gitbook来写书；</span></span><br><span class="line">https://blog.csdn.net/weixin_39637597/article/details/104456912?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&amp;spm=1001.2101.3001.4242</span><br><span class="line"></span><br><span class="line"><span class="comment">## gitbook使用指南：</span></span><br><span class="line">安装：</span><br><span class="line">首先安装nodejs;</span><br><span class="line">然后使用rpm安装gitbook；</span><br><span class="line">npm install -g gitbook-cli</span><br><span class="line">gitbook -V  <span class="comment">## 会自动查看gitbook并更新软件；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 初始化命令：</span></span><br><span class="line">gitbook init 生成两个初始文件；readme.md对书籍的简单介绍；summary为书籍目录结构；</span><br><span class="line">gitbook server:预览书目；</span><br><span class="line"></span><br><span class="line"><span class="comment">## 构建目录：</span></span><br><span class="line">gitbook子目录写作：</span><br><span class="line">* [zilu](zilu.md)</span><br><span class="line">	-  [zilu](zilu.md)</span><br><span class="line">	- (hrttps)</span><br><span class="line">	</span><br><span class="line"><span class="comment">## 安装插件：</span></span><br><span class="line">在该文件夹下生成book.json文件；</span><br><span class="line">并在npm下搜索相关插件的命令（https://www.npmjs.com/），把对应的代码复制到上面即可；</span><br><span class="line">复制完代码后执行， gitbook install 安装对应的插件；</span><br><span class="line">最后，在进行gitbook serve即可；</span><br><span class="line"><span class="comment"># 对应的添加评论插件；</span></span><br><span class="line">https://www.npmjs.com/package/gitbook-plugin-comments-footer</span><br><span class="line"><span class="comment">## 其他可能有用的；</span></span><br><span class="line">gitbook-plugin-donate(打赏按钮): https://www.npmjs.com/package/gitbook-plugin-donate</span><br><span class="line"></span><br><span class="line">gitbook-plugin-github-buttons(GitHub按钮): https://www.npmjs.com/package/gitbook-plugin-github-buttons</span><br><span class="line"></span><br><span class="line">gitbook-plugin-edit-link(GitHub编辑按钮): https://www.npmjs.com/package/gitbook-plugin-edit-link</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 命令合集：</span></span><br><span class="line">gitbook init //初始化目录文件</span><br><span class="line">gitbook <span class="built_in">help</span> //列出gitbook所有的命令</span><br><span class="line">gitbook --<span class="built_in">help</span> //输出gitbook-cli的帮助信息</span><br><span class="line">gitbook build //生成静态网页</span><br><span class="line">gitbook serve //生成静态网页并运行服务器</span><br><span class="line">gitbook build --gitbook=2.0.1 //生成时指定gitbook的版本, 本地没有会先下载</span><br><span class="line">gitbook ls //列出本地所有的gitbook版本</span><br><span class="line">gitbook ls-remote //列出远程可用的gitbook版本</span><br><span class="line">gitbook fetch 标签/版本号 //安装对应的gitbook版本</span><br><span class="line">gitbook update //更新到gitbook的最新版本</span><br><span class="line">gitbook uninstall 2.0.1 //卸载对应的gitbook版本</span><br><span class="line">gitbook build --<span class="built_in">log</span>=debug //指定<span class="built_in">log</span>的级别</span><br><span class="line">gitbook builid --debug //输出错误信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 相关插件：</span></span><br><span class="line"><span class="comment"># 常用插件推荐：</span></span><br><span class="line">https://blog.csdn.net/qq_37149933/article/details/64170653?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_utm_term~default-1.searchformbaiduhighlight&amp;spm=1001.2101.3001.4242</span><br><span class="line">disqus</span><br><span class="line">添加 disqus 评论插件。</span><br><span class="line"></span><br><span class="line">* [介绍](README.md)</span><br><span class="line">   - [next](zil.md)</span><br><span class="line">   </span><br><span class="line"><span class="comment">## 插件的参考写作方法：</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;编写gitbook电子书教程&quot;</span>,</span><br><span class="line">    <span class="string">&quot;description&quot;</span>: <span class="string">&quot;gitbook电子书教程&quot;</span>,</span><br><span class="line">    <span class="string">&quot;author&quot;</span>: <span class="string">&quot;sphard&quot;</span>,</span><br><span class="line">    <span class="string">&quot;language&quot;</span>: <span class="string">&quot;zh-hans&quot;</span>,</span><br><span class="line">    <span class="string">&quot;root&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;donate&quot;</span>,</span><br><span class="line">        <span class="string">&quot;github-buttons@2.1.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;edit-link&quot;</span></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;pluginsConfig&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;donate&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;wechat&quot;</span>: <span class="string">&quot;https://sphard.com/images/wechatpay.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;alipay&quot;</span>: <span class="string">&quot;https://sphard.com/images/alipay.jpg&quot;</span>,</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;button&quot;</span>: <span class="string">&quot;打赏&quot;</span>,</span><br><span class="line">            <span class="string">&quot;alipayText&quot;</span>: <span class="string">&quot;支付宝打赏&quot;</span>,</span><br><span class="line">            <span class="string">&quot;wechatText&quot;</span>: <span class="string">&quot;微信打赏&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;github-buttons&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;repo&quot;</span>: <span class="string">&quot;darrenliuwei/gitbook&quot;</span>,</span><br><span class="line">            <span class="string">&quot;types&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;star&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;size&quot;</span>: <span class="string">&quot;small&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;edit-link&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;base&quot;</span>: <span class="string">&quot;https://github.com/darrenliuwei/gitbook/edit/master&quot;</span>,</span><br><span class="line">            <span class="string">&quot;label&quot;</span>: <span class="string">&quot;Edit This Page&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">################## gitbook写作知识进阶 ########################</span></span><br><span class="line">https://www.jianshu.com/p/a3f2316aee77</span><br></pre></td></tr></table></figure>

<h3 id="markdown语法补充知识"><a href="#markdown语法补充知识" class="headerlink" title="markdown语法补充知识"></a>markdown语法补充知识</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 插入图片和视频的语法：</span></span><br><span class="line"><span class="section"># 直接插入：![<span class="string">tmgar</span>](<span class="link">对应网页地址</span>)</span></span><br><span class="line"><span class="section"># 修改尺寸插入：</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>= <span class="string">&quot;对应的网页地址或者绝对地址&quot;</span>，<span class="attr">width</span> =<span class="string">&quot;100&quot;</span>,<span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">## 插入视频，是通过分享，或者嵌入式链接，直接复制即可；</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 字体添加颜色：</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span>红色文字（此部分输入的是文本文件）<span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">## 插入网页：</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">http</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">## 转行</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="npm使用命令"><a href="#npm使用命令" class="headerlink" title="npm使用命令"></a>npm使用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm get global</span><br><span class="line"></span><br><span class="line">npm install -name-g  <span class="comment">## 安装到全局环境中；</span></span><br><span class="line"></span><br><span class="line">npm list： 查看当前目录下已经安装的所有软件；</span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装第三方插件来更新npm对应的软件：</span></span><br><span class="line">npm install -g npm-check-updates</span><br><span class="line">ncu</span><br><span class="line"></span><br><span class="line"><span class="comment">## 卸载软件；</span></span><br><span class="line">npm uninstall -g gitbook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 解决报错；</span></span><br><span class="line">TypeError: cb.apply is not a <span class="keyword">function</span></span><br><span class="line"><span class="comment">## 部分代码注释掉即可；</span></span><br><span class="line">https://blog.csdn.net/sinat_31057219/article/details/112506883</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>soft</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>git</tag>
        <tag>gitbook</tag>
      </tags>
  </entry>
  <entry>
    <title>加速RWD描述性统计-开发新的R包pmed</title>
    <url>/2022/09/27/%E5%8A%A0%E9%80%9FRWD%E6%8F%8F%E8%BF%B0%E6%80%A7%E7%BB%9F%E8%AE%A1-%E5%BC%80%E5%8F%91pmed/</url>
    <content><![CDATA[<h3 id="加速RWD描述性统计-开发新的R包pmed"><a href="#加速RWD描述性统计-开发新的R包pmed" class="headerlink" title="加速RWD描述性统计-开发新的R包pmed"></a>加速RWD描述性统计-开发新的R包pmed</h3><h4 id="开发背景："><a href="#开发背景：" class="headerlink" title="开发背景："></a>开发背景：</h4><p>在近期的工作中，参与了国外某知名药企的降糖药物真实世界研究，在此过程中学习甚多，也感悟良多。因此，在 近期工作中将项目中用到的开发工具打包成R包，方便后续持续统一优化与减少重复。</p>
<span id="more"></span>

<h4 id="开发难点："><a href="#开发难点：" class="headerlink" title="开发难点："></a>开发难点：</h4><p>1、真实世界不能流出数据原产地，需要构建患者级别的虚拟数据，因此设计了一个用于产生患者虚拟数据的函数，函数可自定义纳入诊断、药品、检查和费用等信息。</p>
<p>2、R包开发要规定更为严格的数据输入范式，但与此同时也会增加了usethis::check()函数检查时面临的数据未发现问题。使用if(getRversion() &gt;= “2.15.1”) utils::globalVariables(null_list)解决。好像目前也没有提出可以优化的方法。</p>
<h4 id="开发用途："><a href="#开发用途：" class="headerlink" title="开发用途："></a>开发用途：</h4><p>1、优化tidy体系的输入和输出流，减少重复代码</p>
<p>2、设计简化体系，提供更多的参数接口来解析gtsummary的结果，保证输出结果的可定制性。</p>
<h4 id="R包网址："><a href="#R包网址：" class="headerlink" title="R包网址："></a>R包网址：</h4><p><a href="https://github.com/nicheerfeng/pmed">https://github.com/nicheerfeng/pmed</a></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>package</tag>
      </tags>
  </entry>
  <entry>
    <title>新增土壤温度环境数据库</title>
    <url>/2022/01/14/%E6%96%B0%E5%A2%9E%E5%85%A8%E7%90%83%E5%9C%9F%E5%A3%A4%E6%B8%A9%E5%BA%A6%E7%8E%AF%E5%A2%83%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>《Global maps of soil temperature》</p>
<span id="more"></span>

<p>近期（2021年4月）多领域研究学者合作提供了土壤温度和生物气候变量的全球地图，分辨率为 1 平方公里，土壤深度为 0-5 和 5-15 厘米。这些地图是通过计算原位土壤温度测量之间的差异（即偏移）创建的，基于来自世界上所有主要陆地生物群落的 1200 多个 1 平方公里像素（从 8500 个独特的温度传感器汇总）的时间序列，和来自 ERA5-Land 的粗粒度气温估计（欧洲中期天气预报中心的大气再分析）。</p>
<h4 id="原文链接："><a href="#原文链接：" class="headerlink" title="原文链接："></a>原文链接：</h4><p><a href="https://www.researchgate.net/publication/357423667_Global_maps_of_soil_temperature">https://www.researchgate.net/publication/357423667_Global_maps_of_soil_temperature</a></p>
<h4 id="数据链接"><a href="#数据链接" class="headerlink" title="数据链接"></a>数据链接</h4><p><a href="https://zenodo.org/record/4558732#.YeF8H2hBw6Q">https://zenodo.org/record/4558732#.YeF8H2hBw6Q</a></p>
]]></content>
      <categories>
        <category>envs</category>
      </categories>
      <tags>
        <tag>soil</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/06/28/hello-world/</url>
    <content><![CDATA[<h3 id="这是一个不爱发文章的生态位研究者的博客。"><a href="#这是一个不爱发文章的生态位研究者的博客。" class="headerlink" title="这是一个不爱发文章的生态位研究者的博客。"></a>这是一个不爱发文章的生态位研究者的博客。</h3><h3 id="博客内容主题列表"><a href="#博客内容主题列表" class="headerlink" title="博客内容主题列表"></a>博客内容主题列表</h3><h3 id="1、R专题统计："><a href="#1、R专题统计：" class="headerlink" title="1、R专题统计："></a>1、R专题统计：</h3><ul>
<li>R包开发</li>
<li>shiny工具</li>
<li>报错</li>
<li>数据处理流程指南</li>
</ul>
<h4 id="2、真实世界研究："><a href="#2、真实世界研究：" class="headerlink" title="2、真实世界研究："></a>2、真实世界研究：</h4><ul>
<li><p>RWD统计方案撰写技巧</p>
</li>
<li><p>数据标化</p>
<span id="more"></span></li>
<li><p>RWD流程构建及优化</p>
</li>
<li><p>流行病学与环境</p>
</li>
</ul>
<h4 id="3、生态位研究"><a href="#3、生态位研究" class="headerlink" title="3、生态位研究"></a>3、生态位研究</h4><ul>
<li>介绍生态位的历史、进展和前沿知识介绍</li>
<li>生态位与物种进化</li>
<li>生态位与物种分布建模</li>
</ul>
]]></content>
      <categories>
        <category>list</category>
      </categories>
      <tags>
        <tag>list</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiny开发指南上线</title>
    <url>/2023/02/14/Shiny%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%E4%B8%8A%E7%BA%BF/</url>
    <content><![CDATA[<h3 id="Shiny开发指南上线"><a href="#Shiny开发指南上线" class="headerlink" title="Shiny开发指南上线"></a>Shiny开发指南上线</h3><h4 id="开发背景："><a href="#开发背景：" class="headerlink" title="开发背景："></a>开发背景：</h4><p>在近期的工作中开发大量shiny应用，但有感于整理的资料过于散乱，查询和检索相对麻烦，故使用shiny快速结合既往资料开发此工具指南。</p>
<span id="more"></span>

<h4 id="开发内容："><a href="#开发内容：" class="headerlink" title="开发内容："></a>开发内容：</h4><p>1、包括常用shiny组件代码、shiny工具包导航、css和js开发、shiny开发的脚手架、shiny学习相关的书籍和相关Tips。</p>
<p>2、开发采用基本shiny框架构建，结合弹出式的sweetleart和markdown文件来辅助快速查询和填充知识库。</p>
<h4 id="开发用途："><a href="#开发用途：" class="headerlink" title="开发用途："></a>开发用途：</h4><p>优化shiny开发过程中非必要时间浪费，减少重复查询和记忆。</p>
<h4 id="R包网址："><a href="#R包网址：" class="headerlink" title="R包网址："></a>R包网址：</h4><p><a href="http://www.nicheerfeng.world/apps/shiny_union/">http://www.nicheerfeng.world/apps/shiny_union/</a></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>shiny</tag>
      </tags>
  </entry>
</search>
